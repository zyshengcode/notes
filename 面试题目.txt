​业务；
​spring的特性，spring core部分，优势在哪里；
​集群环境的话，多线程进行修改。数据层使用悲观锁；
​MongoDB中NoSQL的特性和优势；
​redis，zk，dubbo，分布式事务
​
​linked list的数据结构；
​thread local；
​cached thread pool的缓存队列，里面的参数；
​MySQL的主键和唯一主键的数据结构；
​thread pool的参数的各种意义；
​thread pool的执行流程；
​tolist<object> au = new arraylist <string> ；
​泛型参数；基本泛型；
​MQ中间键的理解；
​
​WebService的端口
​
​spring的核心类有哪些
​筛选出重复数据的sql
​Oracle/MySQL的分页模式
​bean的实例化
​spring注解的主要方法
​git的主要分支
​http的传输方式
​sleep和wait的区别
​JSON和XML的解析方式
​
​redies去做一个技术防止并发，对用户锁定，设置时间，后台乐观锁
​前端短信登录，防止注入 接口里面做个注解，用了注解就拦截逻辑
​
​接口是如何防止暴露的。




 1.用一条SQL语句查出所有分数在60以下学生姓名及课程清单。  
SELECT a.name,b.course
FROM student a,course b
WHERE a.id = b.student_id 
AND b.course>60
2.用一条SQL语句查出每一个学生的课程总数和课程成绩总分。  
SELECT a.name,SUM(b.score),COUNT(*) total
FROM student a,course b
WHERE a.id = b.student_id 
GROUP BY b.student_id





 3.用一条SQL语句查出所有课程平均分在80分以上的学生姓名。  
SELECT * FROM 
(SELECT a.name,a.id,SUM(b.score),SUM(b.score)/COUNT(*) avge
FROM student a,course b
WHERE a.id = b.student_id 
GROUP BY a.id) table2
WHERE table2.avge>80

4.用一条SQL语句查出课程考试及格率（达到60分的学生数/总学生数）在70%以上的课程清单

SELECT * FROM(
SELECT a.name,a.id,SUM(b.score)/COUNT(*) avge,b.course
FROM student a,course b
WHERE a.id = b.student_id 
GROUP BY b.course) tab
WHERE tab.avge>70


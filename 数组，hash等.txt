1.hash碰撞   

如果两个输入串的hash函数的值一样，则称这两个串是一个碰撞(Collision)。
既然是把任意长度的字符串变成固定长度的字符串，所以必有一个输出串对应无穷多个输入串，碰撞是必然存在的

 1.1先计算key的hashcode得到hash值，如果hash值与key相同，直接替换，否则通过拉链法解决冲突，即插入链表其实位置



=============================变量
2、全局变量：

    

	2.1 非静态全局变量：

     

	  非静态全局变量的定义：非静态全局变量都是定在类中，是类的成员变量或者说是成员属性属于类的一部分（或 
          者说是对象的一部分）；

       
	  生存时间：非静态全局变量加载在堆内存中，随着声明初始化而创建，随着对象消亡而消亡；

       
	  是否需要初始化：全局变量都是不需要被强制初始化的，系统都会默认根据其数据类型进行默认赋值；但是建议在声明时都进行初始化操作；

       	
	  创建位置：创建在堆内存中，因为非静态的全局变量数对象的成员变量是对象的一部分；

 

 
      2.2静态全局变量：

       

	静态全局变量的定义：静态的类成员变量；

      
	 生存时间：静态全局变量随着类的字节码文件加载而加载产生，随着字节码文件的消失而消失，生存时间比类的对象还要长；

       		
	是否初始化：凡是全局变量都是可以不要初始化的，静态变量也是一样，系统会自动根据其数据类型进行赋默认值，但是建议变量在声明时都进行初始化；

     
	  创建位置：静态变量时存在于堆内存中的，所以静态全局变量也是存在于堆内存中的；

---------------------
1局部变量：

       
	局部变量的定义：定义在方法中的变量都是局部变量(main方法也是方法，所以定义在main方法中的变量也是局部变量)。

      
	生存时间：局部变量的生存时间和方法的生存时间一致，调用该方法声明该局部变量并初始化的时，该局部变量被创建并分配内存空间；直到该方法调用结束局部变量也就结束了；

 
	是否需要初始化：局部变量在使用前必须进行初始化，系统默认不会对局部变量进行初始化数据操作，如果局部变量在使用前没有进行初始化则会在编译器报错；	
	如果局部变量进行了声明没有进行初始化但是也一直没有被使用的话编译也是不会报错的；（局部变量使用前必须初始化化）

     

	创建位置： 局部变量是创建在栈内存中的；
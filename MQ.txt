RPC（同步请求）

消息队列：（异步，解耦，缓冲）

生产者（异步请求）<------->队列(缓冲作用：存储大量的请求)<------>消费者


建立连接----建立队列----绑定连接----消费消息

生产者：--

通过连接工厂创建连接 connectionFactory

通过工厂创建连接   

----------------------

block---mainloop(对block进行set)--block.get



无符号字节？？？
数据帧----由主循环线程一段段读取数据
Frame.fromBodyFragment

向服务端通过outputstream写数据这个是同步的，拿不到服务端响应（rpc同步请求）

但是通过主循环线程，可以同过inputstream向服务端拿到响应（这里有个死循环，不断从服务端读数据）

=================================

消息中间件：1.实现异步2.实现解耦（串行任务的并行化）
3.实现流量的削峰（负载均衡）

消息--->交换机--->分发消息（queue消息队列）

交换机（与队列进行绑定）类型：

	1.直连交换机----->精准匹配（1对1）

	2.主题交换机（*代表一个单词，#代表一个或多个单词）-->相当于模糊匹配（1对多）

	3.广播类型交换机	


交换机与队列在定义绑定关系的时候，需要注入交换机和队列

通过@Qualifier（“bean的名字”）-->来进行绑定


========================RabbitMQ=======================









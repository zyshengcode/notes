集群是指物理机器server

分布式是指业务模块：如订单模块，支付模块

我们可以吧不通的模块放在不同的server上面

线程是不可控的：因为存在于内存中，数据可能丢失

http：不是长连接，不可控，一次请求，一次响应，可能出现发送请求，但
是server被downd掉的情况   QQ（tcp协议）就是长连接，发送消息，即使
对方不在线，也可以发送，所以http无法保证服务器的连接

方法--->调用消息（消息可以为string，封装了底层的01010101）--
-->调用传输层(采用tcp利用010101来传递消息)

=========分布式事务====================

1.TCC 事务应用场景

我们通过用户下单使用余额+红包支付来看一下TCC事务的具体应用。

假设用户下单操作来自3个系统下单系统、资金账户系统、红包账户系统，下单成功需要同时调用资金账户服务和红包服务完成支付

假设购买商品1000元，使用账户红包200元，余额800元，确认支付。

    Try操作
    tryX 下单系统创建待支付订单
    tryY 冻结账户红包200元
    tryZ 冻结资金账户800元

    Confirm操作
    confirmX 订单更新为支付成功
    confirmY 扣减账户红包200元
    confirmZ 扣减资金账户800元

    Cancel操作
    cancelX 订单处理异常，资金红包退回，订单支付失败
    cancelY 冻结红包失败，账户余额退回，订单支付失败
    cancelZ 冻结余额失败，账户红包退回，订单支付失败

举个例子，假入 Bob 要向 Smith 转账，思路大概是：
我们有一个本地方法，里面依次调用
1、首先在 Try 阶段，要先调用远程接口把 Smith 和 Bob 的钱给冻结起来。
2、在 Confirm 阶段，执行远程调用的转账的操作，转账成功进行解冻。
3、如果第2步执行成功，那么转账成功，如果第二步执行失败，则调用远程冻结接口对应的解冻方法 

2.


ZK===========================================================================

1.msater选举

备用节点定期给当前主节点发送ping包，主节点收到ping包后会向备用节点发送应答ack，当
备用节点收到应答，就认为主节点还活着，让它继续提供服务，否则就认为主节点挂掉了，自
己将开始行使主节点职责



选主原理介绍：zookeeper的节点有两种类型，持久节点跟临时节点。
临时节点有个特性，就是如果注册这个节点的机器失去连接(通常是宕机)，
那么这个节点会被zookeeper删除。选主过程就是利用这个特性，在服务器启动的时候，
去zookeeper特定的一个目录下注册一个临时节点(这个节点作为master，谁注册了这个节点谁就是master)，
注册的时候，如果发现该节点已经存在，则说明已经有别的服务器注册了(也就是有别的服务器已经抢主成功)，
那么当前服务器只能放弃抢主，作为从机存在。同时，抢主失败的当前服务器需要订阅该临时节点的删除事件，
以便该节点删除时(也就是注册该节点的服务器宕机了或者网络断了之类的)进行再次抢主操作。
